#!/bin/sh

# vim: set et ts=4 sts=4 sw=4:

# /lib/udev/bilibop_disk {{{
# This script must be called from /lib/udev/rules.d/66-bilibop.rules
# (or any other udev rules filename).
#
# Usage:
# 	PROGRAM=="bilibop_disk [OPTION] %r/%k"
# 	RUN+="bilibop_disk [OPTION] %r/%k"
#
# with options:
#   -d, --disk
#   -h, --hide
#   -i, --icon
#   -l, --lock
#   -n, --name
#   -p, --part
#   -r, --root
#   -t, --test
# No option is the same as --test.
# }}}

PATH="/bin"

device=""
option="test"

for arg
do
    case "${arg}" in
        -d|--disk)  option="disk" ;;
        -h|--hide)  option="hide" ;;
        -i|--icon)  option="icon" ;;
        -l|--lock)  option="lock" ;;
        -n|--name)  option="name" ;;
        -p|--part)  option="part" ;;
        -r|--root)  option="root" ;;
        -t|--test)  option="test" ;;
        /*)         device="$arg" ;;
        -*)         exit 99 ;;
    esac
done


# Check if the block device given as argument exists, or go away.
[ -b "${device}" ] || exit 3

udev_root="${device%/*}"     # dirname
node_name="${device##*/}"    # basename


# Load bilibop shell functions
. /lib/bilibop/rules.sh

# Avoid running some functions if not necessary; take care with the exit code.
case "${option}" in
    hide)
        [ "${BILIBOP_RULES_PRESENTATION_HIDE}" = "false" ] && exit 1
        ;;
    lock)
        [ "${BILIBOP_RULES_SYSTEM_INTERNAL}" = "false" ] && exit 1
        ;;
esac


# Set BILIBOP_DISK. If a link to the physical hard disk already exists, follow
# it to know the device name. Otherwise, find it with the bilibop functions.
[ -h ${udev_root}/${BILIBOP_COMMON_BASENAME}/disk ] &&
BILIBOP_DISK="$(readlink -f ${udev_root}/${BILIBOP_COMMON_BASENAME}/disk)" ||
BILIBOP_DISK="$(physical_hard_disk /)"


### RUN NOW ###

case "${option}" in
    test)
        [ "$(physical_hard_disk ${device})" = "${BILIBOP_DISK}" ] || exit 1
        ;;
    disk)
        echo "${BILIBOP_COMMON_BASENAME}/disk"
        ;;
    root)
        [ -h ${udev_root}/${BILIBOP_COMMON_BASENAME}/part ] &&
        BILIBOP_PART="$(readlink -f ${udev_root}/${BILIBOP_COMMON_BASENAME}/part)" ||
        BILIBOP_PART="$(underlying_partition /)"
        [ "${BILIBOP_PART}" = "${device}" ] &&
        echo "${BILIBOP_COMMON_BASENAME}/part"

        [ -h ${udev_root}/${BILIBOP_COMMON_BASENAME}/root ] &&
        BILIBOP_ROOT="$(readlink -f ${udev_root}/${BILIBOP_COMMON_BASENAME}/root)" ||
        BILIBOP_ROOT="$(underlying_device_from_file /)"
        [ "${BILIBOP_ROOT}" = "${device}" ] &&
        echo "${BILIBOP_COMMON_BASENAME}/root"
        ;;
    part)
        underlying_partition "${device}"
        ;;
    lock)
        _udisks_system_internal || exit 1
        ;;
    hide)
        _udisks_presentation_hide || exit 1
        ;;
    icon)
        _udisks_presentation_icon || exit 1
        ;;
    name)
        _udisks_presentation_name || exit 1
        ;;
esac

exit 0

