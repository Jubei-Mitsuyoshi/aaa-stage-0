#! /bin/sh
#
# Check and mount all local and remote filesystems.
#
DEPENDS='root kernel networking'

case "$1" in

    start)
	start $DEPENDS || exit 1

	fsck=/sbin/fsck
	if [ -f /no_fsck ]; then
		rm -f /no_fsck
	elif [ -x "$fsck" ]; then
		"$fsck" -A -R -t opts=ro -a -C -T
		RESULT="$?"
		if [ "$RESULT" -gt 2 ]; then
			echo "(fsck returned $RESULT)"
			echo
			echo "The automatic filesystem check has failed.  I need your guidance in order to"
			echo "repair one or more filesystems."
			echo
			echo "You must login as \`root' and use the following command:"
			echo
			echo "    fsck -sAR"
			echo
			stop $DEPENDS
			exit 1
		fi
	fi

	echo "Mounting filesystems..."
	mount -a -F -t noproc,nosysfs,nousbfs
	RESULT="$?"
	if [ "$RESULT" -ne 0 ]; then
		echo "The \`mount' command failed with exit code $RESULT .  I dare not proceed!"
		while read DEV DIR FS OPT FREQ PASSNO; do
			case "$DIR" in /|/sys|/proc|/proc/*) continue ;; esac
			umount "$DIR"
		done </etc/mtab

		stop $DEPENDS
		exit 1
	fi

	# Clear /tmp and /var/run. I don't care!
	rm -rf /tmp/* /tmp/.* 2>/dev/null
	rm -rf /var/run/* /var/run/.* 2>/dev/null

	# Enable quotas, before users can login.
	if [ -x /sbin/quotaon ]; then
		/sbin/quotaon -avug
	fi

	# Let PATH include the new stuff.
	for DIR in /usr/local /usr /usr/X11* /opt/* ; do
		[ -d "$DIR/sbin" ] && PATH="$PATH:$DIR/sbin"
		[ -d "$DIR/bin" ] && PATH="$PATH:$DIR/bin"
	done
	initset PATH="$PATH"

	# Non-root users may now login.
	rm -f /etc/nologin

	exit 0
	;;

    stop)
    	# Do a little cleanup.
	initset -x

	# Non-root users may not login anymore.
	echo >/etc/nologin

	# Since `tty' and friends have to depend on `fs', we're good.
	if [ -x /sbin/quotaoff ]; then
		/sbin/quotaoff -avug
	fi

	echo "Unmounting filesystems..."
	while read DEV DIR FS OPT FREQ PASSNO; do
		case "$DIR" in /|/sys|/proc|/proc/*) continue ;; esac

		umount "$DIR"
	done </etc/mtab

	# Only the root filesystem is now mounted, so PATH should be...
	initset PATH="/sbin:/bin"

	stop $DEPENDS
	;;
esac
